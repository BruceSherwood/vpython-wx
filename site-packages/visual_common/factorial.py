# factorial and combin functions needed in statistical computations
# Bruce Sherwood, Carnegie Mellon University, 2000
# Important improvement to combin, Bruce Sherwood, April 2015

from __future__ import division, print_function
def factorial(x):
    if x <= 0.:
        if x == 0: return 1
        else: raise ValueError('Cannot take factorial of negative number %d' % x)
    fact = 1.0
    nn = 2
    while nn <= x:
        fact = fact*nn
        nn += 1
    if nn != x+1: raise ValueError('Argument of factorial must be an integer, not %0.1f' % x)
    return fact

def combin(x, y):
    # combin(x,y) = factorial(x)/[factorial(y)*factorial(x-y)]
    z = x-y
    num = 1.0
    if y > z:
        y,z = z,y
    nn = z+1
    ny = 1
    while nn <= x:
        num = num*nn/ny
        nn += 1
        ny += 1
    if nn != x+1: raise ValueError('Illegal arguments (%d, %d) for combin function' % (x, y))
    return num

if __name__ == '__main__':
    print('factorial(6) = 6! =', factorial(6)) # should be 720
    print('combin(6,2) = 6!/(2!(6-2)!) =', combin(6,2)) # should be 15
    print('combin(1000,500) = 1000!/(500!(1000-500)!) =', combin(1000,500)) # should be 2.70288240945e+299

